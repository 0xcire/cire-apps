/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as VehiclesIndexImport } from './routes/vehicles/index'
import { Route as StationsIndexImport } from './routes/stations/index'
import { Route as RoutingIndexImport } from './routes/routing/index'
import { Route as BlendCalculatorIndexImport } from './routes/blend-calculator/index'
import { Route as AuthSignUpImport } from './routes/auth/sign-up'
import { Route as AuthSignInImport } from './routes/auth/sign-in'
import { Route as AuthResetPasswordImport } from './routes/auth/reset-password'
import { Route as AuthForgotPasswordImport } from './routes/auth/forgot-password'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const VehiclesIndexRoute = VehiclesIndexImport.update({
  id: '/vehicles/',
  path: '/vehicles/',
  getParentRoute: () => rootRoute,
} as any)

const StationsIndexRoute = StationsIndexImport.update({
  id: '/stations/',
  path: '/stations/',
  getParentRoute: () => rootRoute,
} as any)

const RoutingIndexRoute = RoutingIndexImport.update({
  id: '/routing/',
  path: '/routing/',
  getParentRoute: () => rootRoute,
} as any)

const BlendCalculatorIndexRoute = BlendCalculatorIndexImport.update({
  id: '/blend-calculator/',
  path: '/blend-calculator/',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignUpRoute = AuthSignUpImport.update({
  id: '/auth/sign-up',
  path: '/auth/sign-up',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignInRoute = AuthSignInImport.update({
  id: '/auth/sign-in',
  path: '/auth/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const AuthResetPasswordRoute = AuthResetPasswordImport.update({
  id: '/auth/reset-password',
  path: '/auth/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const AuthForgotPasswordRoute = AuthForgotPasswordImport.update({
  id: '/auth/forgot-password',
  path: '/auth/forgot-password',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/forgot-password': {
      id: '/auth/forgot-password'
      path: '/auth/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordImport
      parentRoute: typeof rootRoute
    }
    '/auth/reset-password': {
      id: '/auth/reset-password'
      path: '/auth/reset-password'
      fullPath: '/auth/reset-password'
      preLoaderRoute: typeof AuthResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInImport
      parentRoute: typeof rootRoute
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/auth/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpImport
      parentRoute: typeof rootRoute
    }
    '/blend-calculator/': {
      id: '/blend-calculator/'
      path: '/blend-calculator'
      fullPath: '/blend-calculator'
      preLoaderRoute: typeof BlendCalculatorIndexImport
      parentRoute: typeof rootRoute
    }
    '/routing/': {
      id: '/routing/'
      path: '/routing'
      fullPath: '/routing'
      preLoaderRoute: typeof RoutingIndexImport
      parentRoute: typeof rootRoute
    }
    '/stations/': {
      id: '/stations/'
      path: '/stations'
      fullPath: '/stations'
      preLoaderRoute: typeof StationsIndexImport
      parentRoute: typeof rootRoute
    }
    '/vehicles/': {
      id: '/vehicles/'
      path: '/vehicles'
      fullPath: '/vehicles'
      preLoaderRoute: typeof VehiclesIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/blend-calculator': typeof BlendCalculatorIndexRoute
  '/routing': typeof RoutingIndexRoute
  '/stations': typeof StationsIndexRoute
  '/vehicles': typeof VehiclesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/blend-calculator': typeof BlendCalculatorIndexRoute
  '/routing': typeof RoutingIndexRoute
  '/stations': typeof StationsIndexRoute
  '/vehicles': typeof VehiclesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/blend-calculator/': typeof BlendCalculatorIndexRoute
  '/routing/': typeof RoutingIndexRoute
  '/stations/': typeof StationsIndexRoute
  '/vehicles/': typeof VehiclesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth/forgot-password'
    | '/auth/reset-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/blend-calculator'
    | '/routing'
    | '/stations'
    | '/vehicles'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/forgot-password'
    | '/auth/reset-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/blend-calculator'
    | '/routing'
    | '/stations'
    | '/vehicles'
  id:
    | '__root__'
    | '/'
    | '/auth/forgot-password'
    | '/auth/reset-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/blend-calculator/'
    | '/routing/'
    | '/stations/'
    | '/vehicles/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
  BlendCalculatorIndexRoute: typeof BlendCalculatorIndexRoute
  RoutingIndexRoute: typeof RoutingIndexRoute
  StationsIndexRoute: typeof StationsIndexRoute
  VehiclesIndexRoute: typeof VehiclesIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
  BlendCalculatorIndexRoute: BlendCalculatorIndexRoute,
  RoutingIndexRoute: RoutingIndexRoute,
  StationsIndexRoute: StationsIndexRoute,
  VehiclesIndexRoute: VehiclesIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth/forgot-password",
        "/auth/reset-password",
        "/auth/sign-in",
        "/auth/sign-up",
        "/blend-calculator/",
        "/routing/",
        "/stations/",
        "/vehicles/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth/forgot-password": {
      "filePath": "auth/forgot-password.tsx"
    },
    "/auth/reset-password": {
      "filePath": "auth/reset-password.tsx"
    },
    "/auth/sign-in": {
      "filePath": "auth/sign-in.tsx"
    },
    "/auth/sign-up": {
      "filePath": "auth/sign-up.tsx"
    },
    "/blend-calculator/": {
      "filePath": "blend-calculator/index.tsx"
    },
    "/routing/": {
      "filePath": "routing/index.tsx"
    },
    "/stations/": {
      "filePath": "stations/index.tsx"
    },
    "/vehicles/": {
      "filePath": "vehicles/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
